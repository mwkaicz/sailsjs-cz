<!DOCTYPE html>
<html>
  <head>
    <title><%= __('New Sails App')</title>

    <!-- Viewport tag mobilu pro podporu citlivosti mobilů -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Styly a Preprocesory
        ==============================

        Vždy můžete přidat CSS soubory manuálně přes `<link>` tag, nebo asynchronně
        požitím řešení jako AMD (RequireJS).  Nebo, pokud chcete, můžete použít výhodu
        Sails konvenční asset pipeline (boilerplate Gruntfile).

        Defaultně jsou styly z Vašeho adresáře `assets/styles` vloženy sem automaticky 
        (mezi STYLES a STYLES END). Je podporováno jak CSS (.css) tak i LESS (.less).
        V produkci budou Vaše styly minimalizovány a sloučeny do jediného souboru.
        
        Pro upravení jakékoliv části vestavěného chování upravte `tasks/pipeline.js`.
        Zde je pár věcí, které můžete například udělat:
            
            + Změnit pořadí Vašich CSS souborů
            + Importovat styly z jiných adresářů
            + Použít jiné preprocesory jako SASS, CSS nebo Stylus
    -->

    <!--STYLES-->
    <!--STYLES END-->
  </head>

  <body>
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML šablony jsou důležité are important předpoklady moderní, bohaté klientské aplikace.
        Aby jejich magie fungovala, frameworky jako Backbone, Angular, Ember nebo Knockout vyžadují,
        aby jste je načetly na straně klienta.
        
        Ve výchozím stavu je Váš Gruntfile konfigurován aby automaticky načetl a předkompiloval
        JST šablony pro klienta z Vašeho `assets/templates` adresáře a následně je automaticky vloží
        sem (mezi TEMPLATES a TEMPLATES END).
        
        Pro úpravu tohoto vestavěného chování upravte `tasks/pipeline.js`.
        Zde je pár věcí, které můžete například udělat:
        
            + Importovat šablony z jiných adresářů
            + Použít jiný engine šablon (handlebars, jade, dust, etc.)
            + Internacionalizovat Vaši klientskou část šablon použitím serverového textového souboru
              předtím než jsou naservírovány klientovi.
    -->

    <!--TEMPLATES-->
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================
      Vždy můžete přidat JS soubory manuálně přes `script` tagy, nebo asynchronně
      požitím řešení jako AMD (RequireJS).  Nebo, pokud chcete, můžete použít výhodu
      Sails konvenční asset pipeline (boilerplate Gruntfile).
    
      Defaultně jsou soubory z Vašeho adresáře `assets/js` vloženy automaticky sem
      (mezi SCRIPT a SCRIPT END). Je podporováno jak JavaScript (.js) tak i CoffeScript (.coffee).
      V produkci budou Vaše skripty minimalizovány a sloučeny do jediného souboru.
      
      Pro upravení jakékoliv části vestavěného chování upravte `tasks/pipeline.js`.
      Zde je pár věcí, které můžete například udělat:
            
            + Změnit pořadí Vašich skriptů
            + Importovat skripty z jiných adresářů
            + Použít jiný preprocesor jako TypeScript
    -->

    <!--SCRIPTS-->
    <!--SCRIPTS END-->
  </body>
</html>
